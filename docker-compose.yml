services:
  db:
    image: postgres:16-alpine
    container_name: backbone_db
    env_file: .env
    ports: ["5432:5432"]
    volumes: [db_data:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d backbone"]
      interval: 5s
      retries: 10
      timeout: 3s

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
      target: migrations # stage that still contains the source code + pnpm
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    restart: "no" # run once and finish

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production # lean image (dist + prod deps)
    env_file: .env
    depends_on:
      migrations:
        condition: service_completed_successfully
    ports: ["3000:3000"]
    command: ["node", "dist/web/app.js"]

  schedule:
    build:
      context: .
      dockerfile: Dockerfile
      target: production # lean image (dist + prod deps)
    env_file: .env
    depends_on:
      migrations:
        condition: service_completed_successfully
    command: ["node", "dist/schedule/app.js"]

volumes:
  db_data:
