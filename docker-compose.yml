services:
  db:
    image: postgres:16-alpine
    container_name: backbone_db
    env_file: .env
    ports: ["5432:5432"]
    volumes: [db_data:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d backbone"]
      interval: 5s
      retries: 10
      timeout: 3s

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: backbone_rabbit
    env_file: .env
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management UI
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q status"]
      interval: 10s
      retries: 5
      timeout: 3s

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
      target: migrations # stage that still contains the source code + pnpm
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    restart: "no" # run once and finish

  app:
    profiles: ["runtime"] # only run in runtime profile (docker compose --profile runtime up)
    build:
      context: .
      dockerfile: Dockerfile
      target: production # lean image (dist + prod deps)
    env_file: .env
    depends_on:
      migrations:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    ports: ["3000:3000"]
    command: ["node", "dist/web/app.js"]

  schedule:
    profiles: ["runtime"] # only run in runtime profile (docker compose --profile runtime up)
    build:
      context: .
      dockerfile: Dockerfile
      target: production # lean image (dist + prod deps)
    env_file: .env
    depends_on:
      migrations:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    command: ["node", "dist/schedule/app.js"]

  eventbus:
    profiles: ["runtime"] # only run in runtime profile (docker compose --profile runtime up)
    build:
      context: .
      dockerfile: Dockerfile
      target: production # lean image (dist + prod deps)
    env_file: .env
    depends_on:
      migrations:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    command: ["node", "dist/eventbus/app.js"]

volumes:
  db_data:
